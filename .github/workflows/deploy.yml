# .github/workflows/deploy.yaml nodejs app
name: Build and Push to DockerHub
on:
  push:
    branches:
      - main
jobs:
  build:
    name: VAULT DEMO PIPELINE
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [13.x]
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
    steps:
      - uses: act10ns/slack@v1
        with:
         status: starting
         channel: '#test'
         if: always()
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        id: setup_NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm Install
        id: npm_install
        run: npm install
     # - run: yarn add --dev jest-junit
      - name: npm Build
        id: npm_build
        run: npm run build --if-present
      - name: npm Test
        id: npm_test
        run: npm test
        continue-on-error: true
#       - uses: act10ns/slack@v1
#         with:
#             status: ${{ job.status }}
#             steps: ${{ toJson(steps) }}
#             slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
#         if: always() 
        

        



   
  Polaris-scan:
    name: "Polaris Scan"
    #needs: build
    runs-on: ubuntu-latest
    # the build-and-test job might be skipped, we don't need to run this job then
    if: success() || failure()
    steps:        
      - uses: actions/checkout@v2       
      - name: Static Analysis with Polaris
        id: polaris_scan
        shell : bash 
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export POLARIS_SERVER_URL=${{ secrets.POLARIS_SERVER_URL}}
          export POLARIS_ACCESS_TOKEN=${{ secrets.POLARIS_ACCESS_TOKEN}}
          wget -q https://ikea.polaris.synopsys.com/api/tools/polaris_cli-linux64.zip
          unzip -j polaris_cli-linux64.zip -d /tmp
          mkdir /tmp/output
          /tmp/polaris -c polaris.yml analyze -w --coverity-ignore-capture-failure | tee /tmp/output/polaris-output_${GITHUB_SHA}.txt
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always() 
    

     
#   Blackduck-SCA:
#     name: "Blackduck SCA"
#     # needs: build
#     runs-on: ubuntu-16.04
#     # the build-and-test job might be skipped, we don't need to run this job then
#     if: success() || failure()
#     steps:        
#       - uses: actions/checkout@v2
#       - run: npm install
#       - name: Software Composition Analysis with Black Duck
#         uses: blackducksoftware/github-action@v2
#         with:
#           args: '--blackduck.url="${{ secrets.BLACKDUCK_URL}}" --blackduck.api.token="${{ secrets.BLACKDUCK_API_TOKEN}}" --detect.tools="DETECTOR" --logging.level.com.synopsys.integration="DEBUG" --detect.risk.report.pdf=true --detect.cleanup=false'
          
 
